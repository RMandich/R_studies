5 -
1
3%5
10 +2
12 * 3
36 - 6
30 / 3
1:6
die <- 1:6
ls
ls()
die - 1
die * die
die %*% die
die %o% die
a <- die %o% die
det (a)
round(3.123412)
factorial(10)
mean(1:6)
mean(die)
mean(round(die))
round(mean(die))
sample(x = die, size = 1)
sample(die, 1)
args(round)
sample(die, size = 6)
sample(x = die, size = 6, replace = TRUE)
dice <- sample(x = die, size = 2, replace = TRUE)
dice
dice
dice
sum dice
sum(dice)
roll <- function() {}
roll()
roll<- function() {
die <- 1:6
dice <- sample(x = die, size = 2, replace = TRUE)
sum(dice)
}
roll()
roll()
roll()
roll2 <- function(bones){
dice <- sample(x = bones, size = 2, replace = TRUE)
sum(dice)
}
roll2(bones = 1:20)
qplot
library(ggplot2)
qplot
x <- c(-1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1)
x
y <- x^3
y
qplot(x,y)
x <- c(1, 2, 2, 2, 3, 3)
qplot(x, binwidth = 1)
x3 <- c(0, 1, 1, 2, 2, 2, 3, 3, 4)
qplot(x, binwidth = 1)
qplot(x3, binwidth = 1)
rolls <- replicate(10000, roll())
qplot(rolls, binwidth = 1)
?sample
qplot(rolls, binwidth = 1)
roll <- function(){
die <- 1:6
dice <- sample(x = die, size = 2, replace = TRUE,
prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8))
sum(dice)
}
rolls <- replicate(n = 10000, roll())
qplot(rolls, binwidth = 1)
View(a)
hand <- c('Ace', 'King', 'Queen', 'Jack', 'Ten',
'Spades', 'Spades', 'Spades', 'Spades', 'Spades')
rf <- matrix(hand, nrow = 5)
rf
class(rf)
typeof(rf)
attributes(rf)
list1 <- list(100:130, "R", list(TRUE, FALSE))
list1
card <- list("Ace", "Hearts", 1)
card
deck <- read.csv("~/hands_on_R/deck.csv")
View(deck)
View(deck)
View(deck)
drop(deck)
?drop
View(deck)
?rm
rm(deck)
deck
deck <- read.csv("~/hands_on_R/deck.csv")
View(deck)
head(deck)
tail(deck)
getwd()
write.csv(deck, file = "cards.csv", row.names = FALSE)
deck[1,]
deal <- function(deck){
deck[1,]
}
deal
deal
deal
deal()
deal <- function(){
deck[1,]
}
deal()
deal()
deal()
random
random <- sample(1:52, size = 52)
random
deck2 <- deck[random, ]
deck2
suffle <- function(cards){
random <- sample(1:52, size = 52)
cards <- deck(random, )
}
shuffle <- function(cards){
random <- sample(1:52, size = 52)
cards <- deck(random, )
}
rm suffle
rm(suffle)
shuffle(deck)
shuffle <- function(cards) {
random <- sample(1:52, size = 52)
cards[random, ]
}
shuffle(cards = deck)
deck
deal(deck)
deal()
shuffle <- function(cards) {
random <- sample(1:52, size = 52)
cards[random, ]
}
deal()
deal()
deal()
deal()
deck2 <- shuffle(deck)
deal()
deal()
deck2 <- shuffle(deck)
deal()
deal()
deck2 <- shuffle(deck)
deal()
deal()
deal(deck2)
deck2 <- shuffle(cards = deck)
deal(deck2)
deal(deck)
deal(cards = deck)
deal()
shuffle(cards = deck)
deal(cards = deck)
deal <- function(cards){
cards[1,]
}
deal()
shuffle <- function(cards) {
random <- sample(1:52, size = 52)
cards[random, ]
}
shuffle(cards = deck)
deal(cards = deck)
deck2 <- shuffle(cards = deck)
deal(cards = deck2)
deal <- function(cards){
cards[1,]
}
deal()
shuffle <- function(cards) {
random <- sample(1:52, size = 52)
cards[random, ]
}
shuffle(cards = deck)
deal(cards = deck)
deck2 <- shuffle(cards = deck)
deal(cards = deck2)
deal()
mean(deck$value)
deck3$value [c(13, 26, 39, 52)]
deck3 <- deck
deck3$value [c(13, 26, 39, 52)]
deck3 <- deck
deck3$value [c(13, 26, 39, 52)] <- c(14,14,14,14)
head(deck3, 13)
deck3 <- shuffle(deck)
deck3
deck3$face == ace
deck3$face == 'ace'
deck3$value[deck3$face == 'ace'] <-14
deck3$value
deck4 <- deck
deck4$value <- 0
head(deck4)
deck4$value[deck4$suit == 'hearts'] <- 1
deck4
deck4$value[deck4$face == 'queen' & deck4$suit = 'spades'] <- 13
deck4$value[deck4$face == 'queen' & deck4$suit == 'spades'] <- 13
deck4
deck5 <- deck
facecard <- deck5$face %in% c('king', 'queen', 'jack')
deck5$value[facecard] <- 10
deck5
deck5$value[deck5$face == 'ace'] <- NA
deck5
lybrary(pryr)
library(pryr)
package.install(pryr)
install.packages(pryr)
environment()
show_env()
environment(deal)
deal <- function() {
card <- deck[1, ]
assign("deck", deck[-1, ], envir = globalenv())
card
}
deal()
shuffle <- function(cards) {
random <- sample(1:52, size = 52)
cards[random, ]
}
deal()
shuffle <- function(cards) {
random <- sample(1:52, size = 52)
cards[random, ]
}
deal()
shuffle <- function(){
random <- sample(1:52, size = 52)
assign("deck", DECK[random, ], envir = globalenv())
}
shuffle()
rm(deck)
deck <- read.csv("~/hands_on_R/deck.csv")
View(deck)
setup <- function(deck) {
DECK <- deck
setup()
setup <- function(deck) {
DECK <- deck
DEAL <- function() {
card <- deck[1, ]
assign("deck", deck[-1, ], envir = globalenv())
card
}
SHUFFLE <- function(){
random <- sample(1:52, size = 52)
assign("deck", DECK[random, ], envir = globalenv())
}
}
DECK <- deck
DEAL <- function() {
card <- deck[1, ]
assign("deck", deck[-1, ], envir = globalenv())
card
}
SHUFFLE <- function(){
random <- sample(1:52, size = 52)
assign("deck", DECK[random, ], envir = globalenv())
}
setup()
cards <- setup(deck)
cards
cards()
-1
end
setup()
deck3 <- deck
shuffle <- cards$shuffle
setup <- function(deck) {
DECK <- deck
DEAL <- function() {
card <- deck[1, ]
assign("deck", deck[-1, ], envir = parent.env(environment()))
card
}
SHUFFLE <- function(){
random <- sample(1:52, size = 52)
assign("deck", DECK[random, ], envir = parent.env(environment()))
}
list(deal = DEAL, shuffle = SHUFFLE)
}
cards <- setup(deck)
deal <- cards$deal
shuffle <- cards$shuffle
